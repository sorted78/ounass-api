╔═══════════════════════════════════════════════════════════════════════════════╗
║                              QUICK START - FIXED!                             ║
╚═══════════════════════════════════════════════════════════════════════════════╝

✅ ISSUES FIXED:

1. ✅ Created .env file with placeholder values
2. ✅ Fixed pydantic warning about model_trained field
3. ✅ Created run.sh script to avoid venv watching issues

═══════════════════════════════════════════════════════════════════════════════

🚀 TO START THE API NOW:

Option 1: Use the run script (Recommended)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
chmod +x run.sh
./run.sh

Option 2: Run uvicorn manually with exclusions
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
uvicorn src.main:app --reload --reload-exclude 'venv/*' --host 0.0.0.0 --port 8000

═══════════════════════════════════════════════════════════════════════════════

📋 WHAT YOU'LL SEE:

The API will start successfully but with a warning that Google Sheets can't connect.
This is EXPECTED because you haven't set up Google Sheets yet.

You'll see something like:
  ✅ API startup complete!
  ⚠️  Failed to initialize services: [Google Sheets error]
  ℹ️  API will start but some features may not work...

This is NORMAL. The API is designed to start even without Google Sheets configured.

═══════════════════════════════════════════════════════════════════════════════

🌐 TESTING THE API (Without Google Sheets):

Once started, visit these URLs:

1. Root endpoint:
   http://127.0.0.1:8000
   
2. Interactive docs (Swagger UI):
   http://127.0.0.1:8000/docs
   
3. Health check:
   http://127.0.0.1:8000/api/v1/health
   
   Response will show:
   {
     "status": "healthy",
     "model_trained": false,    ← This is expected!
     "timestamp": "..."
   }

═══════════════════════════════════════════════════════════════════════════════

📝 NEXT STEPS TO GET FULL FUNCTIONALITY:

Step 1: Set Up Google Sheets (15 minutes)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
Follow the guide: GOOGLE_SHEETS_SETUP.md

Quick summary:
1. Create Google Cloud Project
2. Enable Google Sheets API
3. Create service account
4. Download credentials.json to project root
5. Create Google Sheet
6. Share sheet with service account email
7. Copy Sheet ID

Step 2: Update .env File
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
Edit .env and replace:
GOOGLE_SHEET_ID=temporary_placeholder_sheet_id

With your actual Sheet ID:
GOOGLE_SHEET_ID=1Abc...XyZ  ← Your actual Sheet ID

Step 3: Restart the API
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
Press CTRL+C to stop, then run again:
./run.sh

Step 4: Train the Model
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
curl -X POST http://127.0.0.1:8000/api/v1/train

Step 5: Get Predictions
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
curl http://127.0.0.1:8000/api/v1/forecast/daily

═══════════════════════════════════════════════════════════════════════════════

💡 QUICK TEST WITHOUT GOOGLE SHEETS:

Want to test the API logic without setting up Google Sheets first?

The API includes interactive documentation at /docs where you can:
1. See all available endpoints
2. Test endpoint responses
3. View the expected data formats

Visit: http://127.0.0.1:8000/docs

═══════════════════════════════════════════════════════════════════════════════

🔧 TROUBLESHOOTING:

Issue: Still see validation error for google_sheet_id
Solution: Make sure .env file exists and contains GOOGLE_SHEET_ID

Issue: API keeps reloading constantly
Solution: Use ./run.sh which excludes venv from watching

Issue: Pydantic warning about model_trained
Solution: Already fixed in the code!

═══════════════════════════════════════════════════════════════════════════════

🎉 YOU'RE READY TO START!

Just run:
  chmod +x run.sh
  ./run.sh

The API will start successfully. You can explore it via /docs and then set up
Google Sheets when you're ready for full functionality.

═══════════════════════════════════════════════════════════════════════════════
